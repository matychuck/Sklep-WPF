<Window x:Class="Sklep.ProductWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Sklep" Language="pl-PL"
        mc:Ignorable="d"
        Title="ProductWindow" Height="360" Width="525">
    <Window.Resources>
        <local:ImagePathConverter x:Key="ImagePathConverter" />
        <local:PriceConverter x:Key="PriceConverter"/>
        <local:IntegerValidation x:Key="IntegerValidation"/>
        
        <ControlTemplate x:Key="errorTemplate">
            <DockPanel LastChildFill="true">
                <AdornedElementPlaceholder Name="adoner" VerticalAlignment="Center">
                    <Border BorderBrush="OrangeRed" BorderThickness="1" />
                </AdornedElementPlaceholder>
                <Border Background="OrangeRed" DockPanel.Dock="right"
                    Margin="3,0,0,0" Width="20" Height="20" CornerRadius="5"
                    ToolTip="{Binding ElementName=adoner,
                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                    <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center"
                           FontWeight="Bold" Foreground="white" />
                </Border>

            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxError" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Image Grid.RowSpan="2" Name="image"  Grid.Column="0"  Source="{Binding Path=current_product.ImagePath,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},
            Converter={StaticResource ImagePathConverter}}" Margin="4" />
        <TextBlock  TextWrapping="WrapWithOverflow" Grid.Row="2"  HorizontalAlignment="Center" Padding="10"  FontWeight="Bold" FontSize="14" Text="{Binding Path=current_product.Name,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
        <Border Grid.Column="1" Grid.Row="0" BorderThickness="2" BorderBrush="#b3e6ff" CornerRadius="10" Margin="3">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="1" VerticalAlignment="Top" Click="OpenBasket" HorizontalAlignment="Right" Margin="8">
                    <Grid>
                        <Image Source="images/kosz.png" Width="50"  Stretch="UniformToFill" />
                    </Grid>
                </Button>
                <StackPanel Grid.Column="0" HorizontalAlignment="Right">
                    <Label Content="Mój koszyk:" FontSize="20"></Label>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Przedmioty:" />
                        <TextBlock  Name="BasketAmount"   Padding="5"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </Border>
        <Grid Grid.Column="1" Grid.Row="1" Margin="5,10" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Rozmiar: " FontSize="16" Padding="8" Margin="3"/>
            <ComboBox Grid.Column="1" SelectionChanged="SizeSelected" VerticalContentAlignment="Center" SelectedIndex="0" FontSize="16" Name="SizeBox" Margin="3"/>
            <TextBlock Grid.Row="1" Text="Ilość" FontSize="16" Padding="10" Margin="3"/>
            <TextBox Grid.Row="1" HorizontalAlignment="Left" Grid.Column="1" Width="70"  FontSize="20" Name="quantity" Padding="6" Margin="3" Validation.ErrorTemplate="{StaticResource errorTemplate}" Style="{StaticResource textBoxError}" DataContext="ProductWindow"  >
                <TextBox.Text >
                    <Binding Path="Amount" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <local:IntegerValidation ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                                     MinValue="1"
                                                     
                                     ErrorMessage="Ilość musi być większa od zera" />

                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Grid.Row="2" Name="showAmount" Grid.Column="1" FontSize="13" Padding="6" Margin="3" Text=""/>
            <TextBlock Grid.Row="3" Text="Cena " FontSize="16" Padding="10" Margin="3"/>
            <TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center" Text="{Binding Path=current_product.Price,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource PriceConverter}}" FontSize="20" Padding="8" Margin="3"/>

            <!--<Button Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="3" Click="AddToBasket" FontSize="18" Padding="3" Content="Dodaj do koszyka" BorderBrush="ForestGreen" BorderThickness="2"/>-->
            <Button  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="3" Click="AddToBasket" FontSize="18" Padding="3" Content="Dodaj do koszyka"  Background="LightGreen" BorderBrush="ForestGreen" BorderThickness="2">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <Setter Property="IsEnabled" Value="true" />
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=quantity,
                            Path=(Validation.HasError)}" Value="false" />
                                </MultiDataTrigger.Conditions>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Row="4" Background="LightGoldenrodYellow"  Grid.ColumnSpan="2" VerticalAlignment="Top" Click="ReturnToSearch" Padding="8" Margin="3">Wróć do sklepu</Button>
        </Grid>
    </Grid>
</Window>
